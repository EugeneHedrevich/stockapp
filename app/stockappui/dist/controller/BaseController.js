sap.ui.define(["sap/ui/core/mvc/Controller"],function(e){"use strict";const t=new Set(["Enter","F1","F2","F3","F4","F6","F7","Escape"]);const o={RouteSubAction:{prev:"RouteStockEntry",params:["warehouse","bin"]},RouteStockEntry:{prev:"RouteStorageBin",params:["warehouse"]},RouteStorageBin:{prev:"RouteWarehouse",params:[]}};return e.extend("stockappui.controller.BaseController",{getModelMain(){return this.getOwnerComponent().getModel("vm")},getRouter(){return this.getOwnerComponent().getRouter()},getI18nText(e){return this.getView().getModel("i18n").getResourceBundle().getText(e)},addFunctionKeyListener(e){this.funcPressKey=e||this.getFuncPressKey();window.addEventListener("keydown",this.funcPressKey)},removeFunctionKeyListener(){window.removeEventListener("keydown",this.funcPressKey)},showBusyIndicator(){sap.ui.core.BusyIndicator.show(0)},hideBusyIndicator(){sap.ui.core.BusyIndicator.hide()},async callAction(e,t={}){const o=this.getOwnerComponent().getModel();const n=o.bindContext(`/${e}(...)`);Object.entries(t).forEach(([e,t])=>n.setParameter(e,t));await n.execute();return n.getBoundContext().getObject()},showActionError(e,t){const o=e?.message||e?.error?.message||e?.cause?.message||(typeof e==="string"?e:null)||t||"Action failed";sap.m.MessageBox.error(o)},getFuncPressKey(){return e=>{const o=e.key;if(!t.has(o))return;const n=document.activeElement;const r=n&&(n.tagName==="INPUT"||n.tagName==="TEXTAREA"||n.isContentEditable);if(r&&o==="Enter")return;if(o.startsWith("F"))e.preventDefault();this.pressKeyOnKeyboard(o)}},initBackButtonRouting(e){this._boundRouteName=e;this.getRouter().getRoute(e).attachPatternMatched(this._onPatternMatched,this)},attachViewShowHide(e,t){const o={};if(e)o.onAfterShow=()=>e.call(this);if(t)o.onAfterHide=()=>t.call(this);this.getView().addEventDelegate(o);this._viewDelegate=o},onBackUp(){const e=this.getModelMain();const t=this.getRouter();const n=e.getProperty("/currentRoute");const r=o[n];if(!r){t.navTo("RouteWarehouse",{},true);return}const s=e.getProperty("/routeArgs")||{};const a={};for(const t of r.params){const o=s[t]??e.getProperty("/"+t)??"";a[t]=encodeURIComponent(o)}t.navTo(r.prev,a,true)},_onPatternMatched(e){const t=this.getModelMain();t.setProperty("/currentRoute",e.getParameter("name"));t.setProperty("/routeArgs",e.getParameter("arguments")||{});if(typeof this.onRouteMatchedExt==="function"){return this.onRouteMatchedExt(e)}}})});
//# sourceMappingURL=BaseController.js.map