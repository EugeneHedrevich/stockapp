_schema-version: "3.3.0"
ID: stockapp_backend
description: A simple CAP project.
version: 1.0.0

parameters:
  deploy_mode: html5-repo
  enable-parallel-deployments: true

modules:
  # === CAP service ===
  - name: stockapp_backend-srv
    type: nodejs
    path: gen/srv
    requires:
      - name: stockapp_backend-auth
      - name: stockapp_backend-db
      - name: stockapp_backend-destination   # keep if CAP uses destinations; otherwise remove
    provides:
      - name: srv-api
        properties:
          srv-url: ${default-url}
    parameters:
      buildpack: nodejs_buildpack
      instances: 1
    build-parameters:
      builder: npm-ci

  # === HANA deployer ===
  - name: stockapp_backend-db-deployer
    type: hdb
    path: gen/db
    requires:
      - name: stockapp_backend-db
    parameters:
      buildpack: nodejs_buildpack

  # === UI5 content deployer to HTML5 App Repo ===
  - name: stockapp_backend-app-deployer
    type: com.sap.application.content
    path: gen
    requires:
      - name: stockapp_backend-auth           # optional; safe to keep
      - name: stockapp_backend-html5-repo-host
        parameters:
          content-target: true
      - name: srv-api                         # only needed if your UI build step reads it; safe to keep
    build-parameters:
      build-result: app/
      requires:
        - name: stockappui
          artifacts:
            - stockappui.zip
          target-path: app/

  # === UI5 module (built to zip by ui5-tooling) ===
  - name: stockappui
    type: html5
    path: app/stockapp_ui
    build-parameters:
      builder: custom
      commands:
        - npm install
        - npm run build:cf
      build-result: dist
      supported-platforms: []

resources:
  - name: stockapp_backend-auth
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: application
      path: ./xs-security.json
      config:
        tenant-mode: dedicated
        xsappname: stockapp_backend-${org}-${space}
        oauth2-configuration:
          # With Managed AR you can keep a wildcard. You will later access via the Managed AR URL.
          redirect-uris:
            - https://*.hana.ondemand.com/**

  - name: stockapp_backend-db
    type: com.sap.xs.hdi-container
    parameters:
      service: hana
      service-plan: hdi-shared

  - name: stockapp_backend-destination
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-plan: lite
      config:
        # Managed AR ignores instance-level destinations.
        # Keep this only if CAP itself uses the Destination service.
        HTML5Runtime_enabled: false
        init_data:
          instance:
            destinations:
              - Name: ui5
                Type: HTTP
                ProxyType: Internet
                Authentication: NoAuthentication
                URL: https://ui5.sap.com
              - Name: srv-api
                Type: HTTP
                ProxyType: Internet
                Authentication: NoAuthentication
                HTML5.DynamicDestination: true
                HTML5.ForwardAuthToken: true
                URL: ~{srv-api/srv-url}
            existing_destinations_policy: update
    requires:
      - name: srv-api

  - name: stockapp_backend-html5-repo-host
    type: org.cloudfoundry.managed-service
    parameters:
      service: html5-apps-repo
      service-plan: app-host

build-parameters:
  before-all:
    - builder: custom
      commands:
        - npm ci
        - npx cds build --production
